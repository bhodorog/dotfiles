#export BHG_DEBUG='v'
#[[ ${BHG_DEBUG} == 'v'* ]] && echo 'DEBUGING'

alias ls='ls -G'
alias tree='tree -C'
alias ackl='ack --pager "less -R"'
alias vi=vim
alias emc='emacsclient -nw'
alias fphr='cat ~/.persistent_history | fzf --tac +s'
alias fph='cat ~/.persistent_history | fzf --tac +s --bind="alt-p:toggle-preview" --preview-window="down:wrap" --preview="echo {}" | sed "s/^[^|]*| //" | pbcopy'
alias tstmp='date +%y%m%d%H%M%S'
alias cdiffs='cdiff -s -w 0'

jq_less () {
  if [[ $@ = "" ]]; then
    JQ_ARGS="."
  else
    JQ_ARGS=$@
  fi
  jq -C "${JQ_ARGS}" | less -RFX
}
alias jql=jq_less

# append history rather than rewrite
shopt -s histappend

HISTSIZE=5000
HISTFILESIZE=500000
HISTTIMEFORMAT="%F %T  "

log_bash_persistent_history()
{
  local rc=$?
  [[ $(history 1) =~ ^\ *[0-9]+\ +([^\ ]+\ [^\ ]+)\ +(.*)$ ]]
  local date_part="${BASH_REMATCH[1]}"
  local command_part="${BASH_REMATCH[2]}"
  if [ "$command_part" != "$PERSISTENT_HISTORY_LAST" ]
  then
    echo $date_part "|" "$command_part" >> ~/.persistent_history
    export PERSISTENT_HISTORY_LAST="$command_part"
  fi
}

# Stuff to do on PROMPT_COMMAND
run_on_prompt_command()
{
    log_bash_persistent_history
    history -a
}


grep_persistent_hist () {
  if type ggrep >/dev/null 2>&1; then
    GREP_BINARY=ggrep
  else
    GREP_BINARY=grep
  fi
  ${GREP_BINARY} "$@" ~/.persistent_history
}
alias gph=grep_persistent_hist


function _add_2_path {
    [[ -d $1 ]] && export PATH=$PATH:$1
}

function _prepend_2_path {
    [[ -d $1 ]] && export PATH=$1:$PATH
}

function _bhg_source_if_exists {
    [[ ${BHG_DEBUG} == 'v'* ]] && ([[ -f $1 ]] && echo "$1 exists" || echo "$1 doesn't exist")
    [[ -f $1 ]] && source $1
}
PROMPT_COMMAND='log_bash_persistent_history'

which brew &>/dev/null && BREW_PREFIX=$(brew --prefix)
which brew &>/dev/null && GIT_BREW_PREFIX=$(brew --prefix git)
which brew &>/dev/null && BASH_COMPLETION_2_BREW_PREFIX=$(brew --prefix bash-completion@2)

# use existing homebrew v1 completions
# IMPORTANT: the following will work only for bash versions > 4 (echo $BASH_VERSION)
export BASH_COMPLETION_COMPAT_DIR="/usr/local/etc/bash_completion.d"

# export BASH_COMPLETION_DEBUG=true
# needs to homebrew git (to have git-prompt.sh and git-completion.sh installed in bash_completion.d
[[ -n $BASH_COMPLETION_2_BREW_PREFIX ]] && _bhg_source_if_exists $BASH_COMPLETION_2_BREW_PREFIX/etc/profile.d/bash_completion.sh

# the next line shouldn't be needed due to setting BASH_COMPLETION_COMPAT_DIR above.
# [[ -n $GIT_BREW_PREFIX ]] && _bhg_source_if_exists $GIT_BREW_PREFIX/etc/bash_completion.d/git-prompt.sh
# [[ -n $GIT_BREW_PREFIX ]] && _bhg_source_if_exists $GIT_BREW_PREFIX/etc/bash_completion.d/git-completion.bash

# customize PS1
function _bhg_color_ps1 {
    local RESET="\[\033[0;00m\]"
    local BLACK="\[\033[0;30m\]"
    local RED="\[\033[0;31m\]"
    local GREEN="\[\033[1;32m\]"
    local BLUE="\[\033[0;34m\]"
    local CYAN="\[\033[0;36m\]"
    local GRAY="\[\033[0;37m\]"
    local WHITE_BOLD="\[\033[1;37m\]"
    export PS1='[\u@\h \W$(__git_ps1 " (%s)")]\$ '
    export PS1='\[\033[32m\]\u@\h\[\033[00m\]:\[\033[34m\]\w\[\033[31m\]$(__git_ps1)\[\033[00m\]\$ '
    export PS1="${BLUE}\u@\h${RESET}:${GREEN}\w${RED}"'$(__git_ps1)'"${RESET}\n\$ "
    # [[ -e $(which rvm) ]] && export PS1="(\$(~/.rvm/bin/rvm-prompt))$PS1"
}


[[ -n $GIT_BREW_PREFIX ]] && [[ -d $GIT_BREW_PREFIX/etc/bash_completion.d ]] && _bhg_color_ps1
#[[ -n $(brew --prefix bash-git-prompt) ]] && _bhg_color_ps1

# source specific configs
_bhg_source_if_exists ~/.bhglocalrc
_bhg_source_if_exists ~/.bhgfuncrc
